{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\s1900157\\\\Desktop\\\\Git examples\\\\Counter\\\\src\\\\Counter.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actionTypes from './store/actions';\n\nclass Counter extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, \"This is my counter: \", this.props.count), React.createElement(\"button\", {\n      onClick: this.props.onIncCounter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, \"Add one\"), React.createElement(\"button\", {\n      onClick: this.props.onDecCounter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, \"Remove one\"), React.createElement(\"button\", {\n      onClick: this.props.AddCounter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, \"Add five\"), React.createElement(\"button\", {\n      onClick: this.props.removeCounter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \"Delete five\"), React.createElement(\"button\", {\n      onClick: () => this.props.onStoreResult(this.props.count),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \"Store value\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, this.props.storedResult.map(item => React.createElement(\"li\", {\n      key: item.id,\n      onClick: () => this.props.onDeleteResult(item.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, item.value))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    count: state.ctr.counter,\n    storedResult: state.res.results\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIncCounter: () => dispatch({\n      type: actionTypes.INCREASE\n    }),\n    onDecCounter: () => dispatch({\n      type: actionTypes.DECREASE\n    }),\n    AddCounter: () => dispatch({\n      type: actionTypes.ADD,\n      value: 5\n    }),\n    removeCounter: () => dispatch({\n      type: actionTypes.REMOVE,\n      value: 5\n    }),\n    onStoreResult: result => dispatch({\n      type: actionTypes.STORE_RESULT,\n      result: result\n    }),\n    onDeleteResult: id => dispatch({\n      type: actionTypes.DELETE_RESULT,\n      resultElementId: id\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);","map":{"version":3,"sources":["C:\\Users\\s1900157\\Desktop\\Git examples\\Counter\\src\\Counter.js"],"names":["React","Component","connect","actionTypes","Counter","render","props","count","onIncCounter","onDecCounter","AddCounter","removeCounter","onStoreResult","storedResult","map","item","id","onDeleteResult","value","mapStateToProps","state","ctr","counter","res","results","mapDispatchToProps","dispatch","type","INCREASE","DECREASE","ADD","REMOVE","result","STORE_RESULT","DELETE_RESULT","resultElementId"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actionTypes from './store/actions';\r\n\r\nclass Counter extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>This is my counter: {this.props.count}</h1>\r\n        <button onClick={this.props.onIncCounter}>Add one</button>\r\n        <button onClick={this.props.onDecCounter}>Remove one</button>\r\n        <button onClick={this.props.AddCounter}>Add five</button>\r\n        <button onClick={this.props.removeCounter}>Delete five</button>\r\n        <button onClick={() => this.props.onStoreResult(this.props.count)}>Store value</button>\r\n\r\n        <ul>\r\n          {this.props.storedResult.map(item => (\r\n            <li key={item.id} onClick={() => this.props.onDeleteResult(item.id)}>{item.value}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    count: state.ctr.counter,\r\n    storedResult: state.res.results\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onIncCounter: () => dispatch({ type: actionTypes.INCREASE }),\r\n    onDecCounter: () => dispatch({ type: actionTypes.DECREASE }),\r\n    AddCounter: () => dispatch({ type: actionTypes.ADD, value: 5 }),\r\n    removeCounter: () => dispatch({ type: actionTypes.REMOVE, value: 5 }),\r\n    onStoreResult: (result) => dispatch({ type: actionTypes.STORE_RESULT, result: result}),\r\n    onDeleteResult: (id) => dispatch({ type: actionTypes.DELETE_RESULT, resultElementId: id})\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);\r\n\r\n"]},"metadata":{},"sourceType":"module"}